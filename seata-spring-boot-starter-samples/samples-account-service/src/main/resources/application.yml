server:
  port: 8102
#====================================stream =============================================
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/seata?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
    username: root
    password: 123456
  application:
    name: dubbo-account-example

#====================================Dubbo config===============================================
dubbo:
  application:
    id: dubbo-account-example
    name: dubbo-account-example
    qosEnable: false
  protocol:
    id: dubbo
    name: dubbo
    port: 20883
  registry:
    id: dubbo-business-example-registry
    address: 192.168.3.129:2181,192.168.3.129:2182,192.168.3.129:2183
    protocol: zookeeper
  config-center:
    address: 192.168.3.129:2181,192.168.3.129:2182,192.168.3.129:2183
    protocol: zookeeper
  metadata-report:
    address: 192.168.3.129:2181,192.168.3.129:2182,192.168.3.129:2183
    protocol: zookeeper
#  registry:
#    id: dubbo-account-example-registry
#    address: nacos://127.0.0.1:8848
#  config-center:
#    address: nacos://127.0.0.1:8848
#  metadata-report:
#    address: nacos://127.0.0.1:8848
#====================================mybatis-plus config===============================================
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  typeAliasesPackage: io.seata.samples.integration.*.entity
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      id-type: auto

#====================================Seata Config===============================================
seata:
  enabled: true
  application-id: business-seata-example
  tx-service-group: my_test_tx_group # 事务群组（可以每个应用独立取名，也可以使用相同的名字）
  client:
    rm:
      lock:
        retry-interval: 10 # 校验或占用全局锁重试间隔（默认10ms）
        retry-times: 30 # 校验或占用全局锁重试次数（默认30）
        retry-policy-branch-rollback-on-conflict: true # 分支事务与其它全局回滚事务冲突时锁策略（优先释放本地锁让回滚成功）
      report-success-enable: true
      table-meta-check-enable: false # 自动刷新缓存中的表结构（默认false）
      report-retry-count: 5 # 一阶段结果上报TC重试次数（默认5）
      async-commit-buffer-limit: 10000 # 异步提交缓存队列长度（默认10000）
    tm:
      commit-retry-count: 3 # 一阶段全局提交结果上报TC重试次数（默认1次，建议大于1）
      rollback-retry-count: 3 # 一阶段全局回滚结果上报TC重试次数（默认1次，建议大于1）
    undo:
      data-validation: true # 二阶段回滚镜像校验（默认true开启）
      log-serialization: jackson # undo序列化方式（默认jackson）
      log-table: undo_log  # 自定义undo表名（默认undo_log）
  service:
    vgroup-mapping:
      my_test_tx_group: default # TC 集群（必须与seata-server保持一致）
    enable-degrade: false # 降级开关
    disable-global-transaction: false # 禁用全局事务（默认false）
  transport:
    shutdown:
      wait: 3
    thread-factory:
      boss-thread-prefix: NettyBoss
      worker-thread-prefix: NettyServerNIOWorker
      server-executor-thread-prefix: NettyServerBizHandler
      share-boss-worker: false
      client-selector-thread-prefix: NettyClientSelector
      client-selector-thread-size: 1
      client-worker-thread-prefix: NettyClientWorkerThread
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: true # 客户端事务消息请求是否批量合并发送（默认true）
  config:
    # support: nacos, consul, apollo, zk, etcd3
    type: apollo
    apollo:
      # FAT环境
      # 跳过apollo-meta
      apollo-config-service: http://192.168.3.129:18081
      #apollo-meta: http://192.168.3.129:18081
      app-id: seata-server
      namespace: application
      apollo-accesskey-secret: ""
  registry:
    # support: nacos, eureka, redis, zk, consul, etcd3, sofa
    type: zk
    zk:
      server-addr: 192.168.3.129:2181,192.168.3.129:2182,192.168.3.129:2183
#  registry:
#    file:
#      name: file.conf
#    type: nacos
#    nacos:
#      server-addr: localhost:8848
#      namespace:
#      cluster: default
#      group: SEATA_GROUP
#      username: nacos
#      password: nacos
#  config:
#    file:
#      name: file.conf
#    type: nacos
#    nacos:
#      namespace:
#      server-addr: localhost:8848
#      group: SEATA_GROUP
#      username: nacos
#      password: nacos
#      dataId: nacos-server.properties
